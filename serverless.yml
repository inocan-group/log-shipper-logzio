service:
  name: log-shipper
package:
  individually: true
  excludeDevDependencies: false
  browser: false
custom:
  stage: "${opt:stage, self:provider.stage}"
  region: "${opt:region, self:provider.region}"
  accountId: "741976569717"
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
        - firemock
        - faker
    packager: yarn
plugins:
  - serverless-pseudo-parameters
  - serverless-step-functions
  - serverless-offline
  - serverless-webpack
provider:
  name: aws
  runtime: nodejs8.10
  profile: move
  stage: prod
  region: us-west-2
  environment: "${file(serverless-config/env.yml):${self:custom.stage}}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "ssm:GetParameter"
        - "ssm:GetParametersByPath"
      Resource:
        - "arn:aws:ssm:us-west-2*"
    - Effect: Allow
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - "states:ListStateMachines"
        - "states:CreateActivity"
        - "states:StartExecution"
        - "states:ListExecutions"
        - "states:DescribeExecution"
        - "states:DescribeStateMachineForExecution"
        - "states:GetExecutionHistory"
      Resource:
        - "arn:aws:states:us-west-2:741976569717:stateMachine:*"
        - "arn:aws:states:us-west-2:741976569717:execution:*:*"
functions:
  logShipper:
    handler: src/logzio-shipper.handler
    description: >-
      Lambda function to attach to Cloudwatch log streams; will ship logs to Logzio ELK
      stack.
    memorySize: 256
  cloudwatchRegistration:
    handler: src/cloudwatch-subscribe.handler
    description: Subscribes each new lambda functions log stream to the log-shipper.
    memorySize: 256
  logRetention:
    handler: src/cloudwatch-retention.handler
    description: >-
      Changes the cloudwatch log retention policy to discrete timeframe to save on costs.
    memorySize: 256
stateMachines: {}
